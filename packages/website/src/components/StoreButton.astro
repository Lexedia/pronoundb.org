---
/*
 * Copyright (c) Cynthia Rey et al., All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import Stars from './Stars.astro'

import chromeSvg from 'simple-icons/icons/googlechrome.svg?raw'
import firefoxSvg from 'simple-icons/icons/firefoxbrowser.svg?raw'
import edgeSvg from '@assets/msft-edge.svg?raw'

const STORES = {
	chrome: { name: 'Chrome', icon: chromeSvg },
	firefox: { name: 'Firefox', icon: firefoxSvg },
	edge: { name: 'Edge', icon: edgeSvg },
} as const

export interface Props {
	store: keyof typeof STORES
	version: string
	users: number
	stars: number
	url: string
}

const { store, version, users, stars, url } = Astro.props
---
<div class='flex-1'>
	<a href={url} target='_blank' rel='noreferrer' class:list={[ 'flex gap-2 font-semibold store-btn', store ]}>
		<div class='w-5 h-5 fill-current'>
			<Fragment set:html={STORES[store].icon}/>
		</div>
		<span>
			Get for {STORES[store].name}
		</span>
	</a>
	<div class='flex gap-2 items-center mt-1 text-gray-700 dark:text-gray-100 text-sm'>
		<span>Version {version}</span>
		<span>•</span>
		<span>{users}+ users</span>
		<span>•</span>
		<span><Stars stars={stars}/></span>
	</div>
</div>

<style>
	.store-btn {
		@apply flex items-center justify-center bg-gray-200 px-6 pt-3 pb-4 rounded dark:bg-gray-700 relative overflow-hidden;
	}

	.store-btn::after {
		@apply block absolute h-2 inset-x-0 bottom-0;
		content: '';
	}

	.chrome::after {
		background: linear-gradient(90deg, #4285f4, #4285f4 25%, #ea4335 25%, #ea4335 50%, #fbbc05 50%, #fbbc05 75%, #34a853 75%, #34a853);
	}

	.firefox::after {
		background: linear-gradient(90deg, #ff3c61, #fe7c38);
	}

	.edge::after {
		background: linear-gradient(90deg, #4bc8f6, #35d6c7 55%, #49be77);
	}
</style>
